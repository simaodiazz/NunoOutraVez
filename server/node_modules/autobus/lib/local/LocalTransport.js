"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "default", {
    enumerable: true,
    get: function() {
        return LocalTransport;
    }
});
var _debug = /*#__PURE__*/ _interopRequireDefault(require("debug"));
var _matcher = /*#__PURE__*/ _interopRequireDefault(require("./Matcher"));
function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
    }
}
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
var log = (0, _debug.default)("autobus:transport:local");
var LocalTransport = /*#__PURE__*/ function() {
    "use strict";
    function LocalTransport(bus) {
        _classCallCheck(this, LocalTransport);
        this.bus = bus;
        this.channelListeners = {};
        this.wildcardMatchers = new _matcher.default();
    }
    var _proto = LocalTransport.prototype;
    _proto.send = function send(channel, data) {
        var _this = this;
        var listeners = this.getListeners(channel);
        if (listeners.length > 1) {
            log("More than one listener found");
            log(data);
            throw new Error("Can only have one matching listener when sending a message, try publish?");
        }
        if (listeners.length === 0) {
            log("No listeners found for message");
            log(data);
        }
        listeners.forEach(function(listener) {
            process.nextTick(function() {
                _this.bus.deliver(data, listener);
            });
        });
    };
    _proto.publish = function publish(channel, data) {
        var _this = this;
        var listeners = this.getListeners(channel);
        if (listeners.length === 0) {
            log("No listeners found for message %s", data);
            log(data);
        }
        listeners.forEach(function(listener) {
            process.nextTick(function() {
                _this.bus.deliver(data, listener);
            });
        });
    };
    _proto.join = function join(channel, listener) {
        if (this.wildcardMatchers.isWildcardChannel(channel)) {
            this.wildcardMatchers.add(channel, listener);
        } else {
            var listeners = this.channelListeners[channel];
            if (listeners === undefined) {
                listeners = [];
                this.channelListeners[channel] = listeners;
            }
            listeners.push(listener);
        }
        return listener;
    };
    _proto.leave = function leave(channel, listener) {
        if (channel.indexOf("*") >= 0 || channel.indexOf("?") >= 0) {
            this.wildcardMatchers.remove(channel, listener);
        } else {
            var listeners = this.channelListeners[channel];
            if (listeners === undefined) {
                throw new Error("callback not registered");
            }
            this.channelListeners[channel] = listeners.filter(function(e) {
                return e !== listener;
            });
        }
    };
    _proto.getListeners = function getListeners(channel) {
        var listeners = this.channelListeners[channel] || [];
        listeners = listeners.slice().concat(this.wildcardMatchers.match(channel));
        return listeners;
    };
    return LocalTransport;
}();
